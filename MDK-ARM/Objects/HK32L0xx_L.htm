<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\HK32L0xx_L.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\HK32L0xx_L.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6130100: Last Updated: Wed Oct 15 16:09:44 2025
<BR><P>
<H3>Maximum Stack Usage =        408 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; TaskManagerStateMachineInit &rArr; flash_decode_active_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC_COMP_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[22]">AES_TRNG_EMACC_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[17]">DAC_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[f]">DMA_CH1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[10]">DMA_CH2_3_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[11]">DMA_CH4_7_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from hk32l0xx_it.o(.text.EXTI4_15_IRQHandler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from hk32l0xx_it.o(.text.HardFault_Handler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[23]">LCD_CAN_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[e]">LPUART_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from hk32l0xx_it.o(.text.NMI_Handler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from hk32l0xx_it.o(.text.PendSV_Handler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from hk32l0xx_it.o(.text.SVC_Handler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from octopus_bsp_hk32l08x.o(.text.SysTick_Handler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_hk32l0xx.o(.text.SystemInit) referenced from keil_startup_hk32l0xx.o(.text)
 <LI><a href="#[18]">TIM14_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[19]">TIM15_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1a]">TIM16_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[1b]">TIM17_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[13]">TIM1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[14]">UART3_4_IRQHandler</a> from octopus_bsp_hk32l08x.o(.text.UART3_4_IRQHandler) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[24]">USB_DVSQ_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from keil_startup_hk32l0xx.o(.text) referenced from keil_startup_hk32l0xx.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from keil_startup_hk32l0xx.o(.text)
 <LI><a href="#[29]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2a]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[28]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[31]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[30]">fputc</a> from octopus_log.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[30]">fputc</a> from octopus_log.o(i.fputc) referenced from printfa.o(i.__0vprintf)
 <LI><a href="#[2b]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[2d]">key_receive_handler</a> from octopus_key.o(.text.key_receive_handler) referenced from octopus_key.o(.text.task_key_init_running)
 <LI><a href="#[2c]">key_send_handler</a> from octopus_key.o(.text.key_send_handler) referenced from octopus_key.o(.text.task_key_init_running)
 <LI><a href="#[25]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2f]">system_receive_handler</a> from octopus_system.o(.text.system_receive_handler) referenced from octopus_system.o(.text.task_system_init_running)
 <LI><a href="#[2e]">system_send_handler</a> from octopus_system.o(.text.system_send_handler) referenced from octopus_system.o(.text.task_system_init_running)
 <LI><a href="#[3c]">task_gpio_assert_running</a> from octopus_gpio.o(i.task_gpio_assert_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[3a]">task_gpio_init_running</a> from octopus_gpio.o(i.task_gpio_init_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[3e]">task_gpio_post_running</a> from octopus_gpio.o(i.task_gpio_post_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[3d]">task_gpio_running</a> from octopus_gpio.o(i.task_gpio_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[3b]">task_gpio_start_running</a> from octopus_gpio.o(i.task_gpio_start_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[3f]">task_gpio_stop_running</a> from octopus_gpio.o(i.task_gpio_stop_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[42]">task_key_assert_running</a> from octopus_key.o(.text.task_key_assert_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[40]">task_key_init_running</a> from octopus_key.o(.text.task_key_init_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[44]">task_key_post_running</a> from octopus_key.o(.text.task_key_post_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[43]">task_key_running</a> from octopus_key.o(.text.task_key_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[41]">task_key_start_running</a> from octopus_key.o(.text.task_key_start_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[45]">task_key_stop_running</a> from octopus_key.o(.text.task_key_stop_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[48]">task_ptl_assert_running</a> from octopus_uart_ptl.o(i.task_ptl_assert_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[46]">task_ptl_init_running</a> from octopus_uart_ptl.o(i.task_ptl_init_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4a]">task_ptl_post_running</a> from octopus_uart_ptl.o(i.task_ptl_post_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[49]">task_ptl_running</a> from octopus_uart_ptl.o(i.task_ptl_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[47]">task_ptl_start_running</a> from octopus_uart_ptl.o(i.task_ptl_start_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4b]">task_ptl_stop_running</a> from octopus_uart_ptl.o(i.task_ptl_stop_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[36]">task_system_assert_running</a> from octopus_system.o(.text.task_system_assert_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[34]">task_system_init_running</a> from octopus_system.o(.text.task_system_init_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[38]">task_system_post_running</a> from octopus_system.o(.text.task_system_post_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[37]">task_system_running</a> from octopus_system.o(.text.task_system_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[35]">task_system_start_running</a> from octopus_system.o(.text.task_system_start_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[39]">task_system_stop_running</a> from octopus_system.o(.text.task_system_stop_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4e]">task_update_assert_running</a> from octopus_update_mcu.o(i.task_update_assert_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4c]">task_update_init_running</a> from octopus_update_mcu.o(i.task_update_init_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[50]">task_update_post_running</a> from octopus_update_mcu.o(i.task_update_post_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4f]">task_update_running</a> from octopus_update_mcu.o(i.task_update_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[4d]">task_update_start_running</a> from octopus_update_mcu.o(i.task_update_start_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[51]">task_update_stop_running</a> from octopus_update_mcu.o(i.task_update_stop_running) referenced from octopus_task_configuration.o(.rodata.task_module_config_table)
 <LI><a href="#[32]">update_receive_handler</a> from octopus_update_mcu.o(i.update_receive_handler) referenced from octopus_update_mcu.o(i.task_update_init_running)
 <LI><a href="#[33]">update_send_handler</a> from octopus_update_mcu.o(i.update_send_handler) referenced from octopus_update_mcu.o(i.task_update_init_running)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[52]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[140]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[141]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[142]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[143]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>AES_TRNG_EMACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA_CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_CH2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA_CH4_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LCD_CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPUART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USB_DVSQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32l0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Config
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_MS_
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[eb]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Push
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Pop
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_delay_ms
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[57]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[2b]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[119]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read_
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[146]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[13c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>

<P><STRONG><a name="[148]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Push
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Pop
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_address
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_decode_active_version
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_and_verify_dest_bank
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reconfig_bank_address
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_mcu_meta_infor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_meta_infor_valid
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_first_boot
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_bank_address_valid
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_user_app_bank
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check_vector_table
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check_enter_upgrade_mode
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_enter_upgrade_mode
</UL>

<P><STRONG><a name="[149]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reconfig_bank_address
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init_version
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_enter_upgrade_mode
</UL>

<P><STRONG><a name="[14b]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__0sscanf</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_build_date_time
</UL>

<P><STRONG><a name="[5d]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[6d]"></a>_scanf_string</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[14d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[14e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[5c]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[28]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[150]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[61]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[53]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[151]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__vfscanf</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (Weak Reference)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[6e]"></a>Delay_MS_</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text.Delay_MS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Delay_MS_ &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>EEPROM_Init</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, hk32l0xx_eeprom.o(.text.EEPROM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EEPROM_Init &rArr; RCC_APB1PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hk32l0xx_it.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hk32l0xx_exti.o(.text.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>EXTI_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32l0xx_exti.o(.text.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[11b]"></a>FLASH_ClearFlag</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hk32l0xx_flash.o(.text.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
</UL>

<P><STRONG><a name="[76]"></a>FLASH_ErasePage</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hk32l0xx_flash.o(.text.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
</UL>

<P><STRONG><a name="[79]"></a>FLASH_GetStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hk32l0xx_flash.o(.text.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[11c]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hk32l0xx_flash.o(.text.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
</UL>

<P><STRONG><a name="[78]"></a>FLASH_ProgramWord</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, hk32l0xx_flash.o(.text.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_
</UL>

<P><STRONG><a name="[11a]"></a>FLASH_Unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hk32l0xx_flash.o(.text.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
</UL>

<P><STRONG><a name="[77]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hk32l0xx_flash.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_Config</STRONG> (Thumb, 412 bytes, Stack size 64 bytes, octopus_bsp_hk32l08x.o(.text.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>GPIO_Init</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, hk32l0xx_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>

<P><STRONG><a name="[7c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hk32l0xx_gpio.o(.text.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>

<P><STRONG><a name="[b4]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32l0xx_gpio.o(.text.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>

<P><STRONG><a name="[b6]"></a>GPIO_WriteBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hk32l0xx_gpio.o(.text.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32l0xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32l0xx_i2c.o(.text.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromWaitEepromStandbyState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromPageWrite
</UL>

<P><STRONG><a name="[73]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32l0xx_i2c.o(.text.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Init
</UL>

<P><STRONG><a name="[7d]"></a>I2C_EepromBufferWrite</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, hk32l0xx_eeprom.o(.text.I2C_EepromBufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_EepromBufferWrite &rArr; I2C_EepromPageWrite &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromWaitEepromStandbyState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromPageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_eeprom_write_
</UL>

<P><STRONG><a name="[7e]"></a>I2C_EepromPageWrite</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, hk32l0xx_eeprom.o(.text.I2C_EepromPageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2C_EepromPageWrite &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromBufferWrite
</UL>

<P><STRONG><a name="[7f]"></a>I2C_EepromWaitEepromStandbyState</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hk32l0xx_eeprom.o(.text.I2C_EepromWaitEepromStandbyState))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_EepromWaitEepromStandbyState &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromBufferWrite
</UL>

<P><STRONG><a name="[84]"></a>I2C_GenerateSTART</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hk32l0xx_i2c.o(.text.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromWaitEepromStandbyState
</UL>

<P><STRONG><a name="[80]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32l0xx_i2c.o(.text.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromWaitEepromStandbyState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromPageWrite
</UL>

<P><STRONG><a name="[72]"></a>I2C_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hk32l0xx_i2c.o(.text.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Init
</UL>

<P><STRONG><a name="[82]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32l0xx_i2c.o(.text.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromPageWrite
</UL>

<P><STRONG><a name="[81]"></a>I2C_TransferHandling</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hk32l0xx_i2c.o(.text.I2C_TransferHandling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromWaitEepromStandbyState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromPageWrite
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32l0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>PTL_1_UART_Send_Buffer</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_bsp_hk32l08x.o(.text.PTL_1_UART_Send_Buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Send_Buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart0_send_buffer
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32l0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hk32l0xx_rcc.o(.text.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Config
</UL>

<P><STRONG><a name="[71]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hk32l0xx_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Init
</UL>

<P><STRONG><a name="[89]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hk32l0xx_rcc.o(.text.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_vector_table_config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Config
</UL>

<P><STRONG><a name="[87]"></a>RCC_Config</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, octopus_bsp_hk32l08x.o(.text.RCC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_Config &rArr; RCC_APB1PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, hk32l0xx_rcc.o(.text.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[8a]"></a>RCC_LSEConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hk32l0xx_rcc.o(.text.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Config
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32l0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[10f]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32l0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_vector_table_config
</UL>

<P><STRONG><a name="[8c]"></a>SYS_Config</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, octopus_bsp_hk32l08x.o(.text.SYS_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SYS_Config &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, octopus_bsp_hk32l08x.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, system_hk32l0xx.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo48_HSE8M_PLL
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>TaskManagerStateEventLoop</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus.o(.text.TaskManagerStateEventLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TaskManagerStateEventLoop &rArr; otms_task_manager_run &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_run
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>TaskManagerStateMachineInit</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, octopus.o(.text.TaskManagerStateMachineInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = TaskManagerStateMachineInit &rArr; flash_decode_active_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_mcu_status
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_uart_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_ptl_help
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_message_queue_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_gpio_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_flash_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_decode_active_version
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>UART3_4_IRQHandler</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, octopus_bsp_hk32l08x.o(.text.UART3_4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART3_4_IRQHandler &rArr; UART3_RX_Callback &rArr; hal_com_uart_receive_callback_ptl_1 &rArr; cFifo_Push &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_RX_Callback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_RX_Callback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32l0xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>UART3_Config_IRQ</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, octopus_bsp_hk32l08x.o(.text.UART3_Config_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = UART3_Config_IRQ &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>UART3_RX_Callback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_bsp_hk32l08x.o(.text.UART3_RX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART3_RX_Callback &rArr; hal_com_uart_receive_callback_ptl_1 &rArr; cFifo_Push &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart_receive_callback_ptl_1
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_4_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>UART3_SendByte</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, octopus_bsp_hk32l08x.o(.text.UART3_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Send_Buffer
</UL>

<P><STRONG><a name="[86]"></a>UART3_Send_Buffer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, octopus_bsp_hk32l08x.o(.text.UART3_Send_Buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTL_1_UART_Send_Buffer
</UL>

<P><STRONG><a name="[ad]"></a>UART4_Config_IRQ</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, octopus_bsp_hk32l08x.o(.text.UART4_Config_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = UART4_Config_IRQ &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>UART4_RX_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, octopus_bsp_hk32l08x.o(.text.UART4_RX_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_4_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_4_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
</UL>

<P><STRONG><a name="[ab]"></a>USART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
</UL>

<P><STRONG><a name="[9f]"></a>USART_GetITStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_4_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>USART_ITConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hk32l0xx_usart.o(.text.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
</UL>

<P><STRONG><a name="[a5]"></a>USART_Init</STRONG> (Thumb, 176 bytes, Stack size 80 bytes, hk32l0xx_usart.o(.text.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
</UL>

<P><STRONG><a name="[a0]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_4_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>USART_SendData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hk32l0xx_usart.o(.text.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_SendByte
</UL>

<P><STRONG><a name="[ae]"></a>hal_com_uart0_send_buffer</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, octopus_uart_hal.o(.text.hal_com_uart0_send_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PTL_1_UART_Send_Buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[111]"></a>hal_com_uart2_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart2_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[112]"></a>hal_com_uart3_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart3_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[113]"></a>hal_com_uart4_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart4_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[114]"></a>hal_com_uart5_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart5_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[115]"></a>hal_com_uart6_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart6_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[116]"></a>hal_com_uart7_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart7_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[117]"></a>hal_com_uart8_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart8_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[118]"></a>hal_com_uart9_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uart9_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[af]"></a>hal_com_uart_get_fifo_data_1</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, octopus_uart_hal.o(.text.hal_com_uart_get_fifo_data_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_com_uart_get_fifo_data_1 &rArr; cFifo_Pop &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_rx_event_handler
</UL>

<P><STRONG><a name="[a9]"></a>hal_com_uart_receive_callback_ptl_1</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, octopus_uart_hal.o(.text.hal_com_uart_receive_callback_ptl_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = hal_com_uart_receive_callback_ptl_1 &rArr; cFifo_Push &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_RX_Callback
</UL>

<P><STRONG><a name="[110]"></a>hal_com_uartl_send_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_uart_hal.o(.text.hal_com_uartl_send_buffer))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>

<P><STRONG><a name="[b2]"></a>hal_gpio_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, octopus_gpio_hal.o(.text.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_gpio_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_gpio_init
</UL>

<P><STRONG><a name="[b3]"></a>hal_gpio_read</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_gpio_hal.o(.text.hal_gpio_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_gpio_read
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_init_running
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_is_power_on
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
</UL>

<P><STRONG><a name="[b5]"></a>hal_gpio_write</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, octopus_gpio_hal.o(.text.hal_gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_gpio_write
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_power_on_off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
</UL>

<P><STRONG><a name="[b7]"></a>hal_uart_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, octopus_uart_hal.o(.text.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_uart_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cFifo_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_uart_init
</UL>

<P><STRONG><a name="[d7]"></a>key_reset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, octopus_key.o(.text.key_reset))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = main &rArr; TaskManagerStateMachineInit &rArr; flash_decode_active_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_vector_table_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_set_channel
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateEventLoop
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Config
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartTickCounter
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_MS_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[99]"></a>otsm_uart_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, octopus_uart_hal.o(.text.otsm_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = otsm_uart_init &rArr; hal_uart_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[c2]"></a>system_event_message_handler</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, octopus_system.o(.text.system_event_message_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = system_event_message_handler &rArr; GetTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reboot_soc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_onoff
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_running
</UL>

<P><STRONG><a name="[c7]"></a>system_is_power_on</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_system.o(.text.system_is_power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_is_power_on &rArr; gpio_is_power_on &rArr; hal_gpio_read
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_is_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
</UL>

<P><STRONG><a name="[c9]"></a>system_mcu_initate_remote_soc</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, octopus_system.o(.text.system_mcu_initate_remote_soc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = system_mcu_initate_remote_soc &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
</UL>

<P><STRONG><a name="[c5]"></a>system_power_onoff</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, octopus_system.o(.text.system_power_onoff))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = system_power_onoff &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_power_on_off
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_is_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
</UL>

<P><STRONG><a name="[c6]"></a>system_reboot_soc</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, octopus_system.o(.text.system_reboot_soc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = system_reboot_soc &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
</UL>

<P><STRONG><a name="[9e]"></a>system_set_mcu_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, octopus_system.o(.text.system_set_mcu_status))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[fb]"></a>task_carinfo_get_meter_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_vehicle.o(.text.task_carinfo_get_meter_info))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
</UL>

<P><STRONG><a name="[42]"></a>task_key_assert_running</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_assert_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_key_assert_running &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_reqest_running
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[40]"></a>task_key_init_running</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_init_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_key_init_running &rArr; ptl_register_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_register_module
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[44]"></a>task_key_post_running</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_post_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_key_post_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[43]"></a>task_key_running</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = task_key_running &rArr; task_key_action_handler &rArr; task_key_power_handler &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[41]"></a>task_key_start_running</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_start_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_key_start_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[45]"></a>task_key_stop_running</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_stop_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_key_stop_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[36]"></a>task_system_assert_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_assert_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_system_assert_running &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[34]"></a>task_system_init_running</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_init_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_system_init_running &rArr; ptl_register_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_reqest_running
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_register_module
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[38]"></a>task_system_post_running</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_post_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_system_post_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[37]"></a>task_system_running</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = task_system_running &rArr; system_event_message_handler &rArr; GetTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[35]"></a>task_system_start_running</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_start_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_system_start_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[39]"></a>task_system_stop_running</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, octopus_system.o(.text.task_system_stop_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_system_stop_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[d8]"></a>E2ROMWritBuffTo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, octopus_flash.o(i.E2ROMWritBuffTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = E2ROMWritBuffTo &rArr; hal_eeprom_write_ &rArr; I2C_EepromBufferWrite &rArr; I2C_EepromPageWrite &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_eeprom_write_
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ROM_writ_metas_infor
</UL>

<P><STRONG><a name="[da]"></a>E2ROM_writ_metas_infor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, octopus_flash.o(i.E2ROM_writ_metas_infor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = E2ROM_writ_metas_infor &rArr; E2ROMWritBuffTo &rArr; hal_eeprom_write_ &rArr; I2C_EepromBufferWrite &rArr; I2C_EepromPageWrite &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ROMWritBuffTo
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>

<P><STRONG><a name="[db]"></a>FlashErasePage</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, octopus_flash.o(i.FlashErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FlashErasePage &rArr; hal_flash_erase_page_ &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_allow_update_address
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
</UL>

<P><STRONG><a name="[de]"></a>FlashReadToBuff</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_flash.o(i.FlashReadToBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FlashReadToBuff &rArr; hal_flash_read_
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read_
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
</UL>

<P><STRONG><a name="[e0]"></a>FlashWritBuffTo</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, octopus_flash.o(i.FlashWritBuffTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FlashWritBuffTo &rArr; hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_allow_update_address
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
</UL>

<P><STRONG><a name="[e2]"></a>GetSystemTickClock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, octopus_tickcounter.o(i.GetSystemTickClock))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
</UL>

<P><STRONG><a name="[c0]"></a>GetTickCounter</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, octopus_tickcounter.o(i.GetTickCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTickClock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_running
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
</UL>

<P><STRONG><a name="[132]"></a>IsTickCounterStart</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, octopus_tickcounter.o(i.IsTickCounterStart))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
</UL>

<P><STRONG><a name="[c1]"></a>RestartTickCounter</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_tickcounter.o(i.RestartTickCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RestartTickCounter &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>StartTickCounter</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, octopus_tickcounter.o(i.StartTickCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTickClock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartTickCounter
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_assert_running
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_running
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_assert_running
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_assert_running
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
</UL>

<P><STRONG><a name="[c3]"></a>StopTickCounter</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, octopus_tickcounter.o(i.StopTickCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = StopTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
</UL>

<P><STRONG><a name="[e3]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[152]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[f5]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_buffer
</UL>

<P><STRONG><a name="[153]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[154]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[e5]"></a>__0snprintf</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[155]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[fc]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_decode_active_version
</UL>

<P><STRONG><a name="[156]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[157]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[e6]"></a>__0vprintf</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, printfa.o(i.__0vprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[158]"></a>__1vprintf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[159]"></a>__2vprintf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[15a]"></a>__c89vprintf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[f3]"></a>vprintf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfa.o(i.__0vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf
</UL>

<P><STRONG><a name="[68]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ff]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, octopus_flash.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reconfig_bank_address
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_get_target_bank
</UL>

<P><STRONG><a name="[15b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[15c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[15d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[ec]"></a>build_version_code</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, octopus_utils.o(i.build_version_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_build_date_time
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encode_datetime_version
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_decode_active_version
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init_version
</UL>

<P><STRONG><a name="[b8]"></a>cFifo_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, octopus_cfifo.o(i.cFifo_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cFifo_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[b0]"></a>cFifo_Pop</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, octopus_cfifo.o(i.cFifo_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cFifo_Pop &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart_get_fifo_data_1
</UL>

<P><STRONG><a name="[b1]"></a>cFifo_Push</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, octopus_cfifo.o(i.cFifo_Push))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cFifo_Push &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart_receive_callback_ptl_1
</UL>

<P><STRONG><a name="[10b]"></a>calculate_crc_32</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, octopus_utils.o(i.calculate_crc_32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = calculate_crc_32
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_verify_bank_slot_crc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[120]"></a>clear_message</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, octopus_msgqueue.o(i.clear_message))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_message_queue_init
</UL>

<P><STRONG><a name="[f1]"></a>compare_versions</STRONG> (Thumb, 126 bytes, Stack size 80 bytes, octopus_utils.o(i.compare_versions))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = compare_versions &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_datetime_version
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[94]"></a>dbg_log_printf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, octopus_log.o(i.dbg_log_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dbg_log_printf &rArr; vprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_logo
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[f4]"></a>dbg_log_printf_buffer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, octopus_log.o(i.dbg_log_printf_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dbg_log_printf_buffer &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_print_program_data
</UL>

<P><STRONG><a name="[96]"></a>dbg_log_printf_level</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, octopus_log.o(i.dbg_log_printf_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprintf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_stop_running
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_start_running
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_init_running
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_stop_running
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_start_running
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_init_running
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_stop_running
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_start_running
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_init_running
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_stop_running
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_start_running
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_init_running
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reboot_soc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_onoff
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_mcu_initate_remote_soc
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_send_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_stop_running
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_start_running
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_init_running
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_register_module
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_received_dispatcher
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_local_dispatcher
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_send_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_receive_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_send_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_and_verify_dest_bank
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_dispatcher
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_eeprom_write_
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_versions
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_verify_bank_slot_crc
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_mcu_meta_infor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_goto_terget_bank
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_user_app_bank
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check_vector_table
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_JumpToApplication
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWritBuffTo
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_print_registered_module
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_checksum
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame_header
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_proc_valid_frame
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_enter_upgrade_mode
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_print_program_data
</UL>

<P><STRONG><a name="[bd]"></a>dbg_log_set_channel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, octopus_log.o(i.dbg_log_set_channel))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>decode_datetime_version</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, octopus_utils.o(i.decode_datetime_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = decode_datetime_version
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_decode_active_version
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_versions
</UL>

<P><STRONG><a name="[ee]"></a>encode_datetime_version</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, octopus_utils.o(i.encode_datetime_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = encode_datetime_version
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_version_code
</UL>

<P><STRONG><a name="[f6]"></a>flash_JumpToApplication</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, octopus_flash.o(i.flash_JumpToApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_JumpToApplication &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_goto_terget_bank
</UL>

<P><STRONG><a name="[f8]"></a>flash_check_enter_upgrade_mode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_check_enter_upgrade_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_check_enter_upgrade_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[f9]"></a>flash_check_vector_table</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, octopus_flash.o(i.flash_check_vector_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_check_vector_table &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[fa]"></a>flash_data_check_invalid</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, octopus_flash.o(i.flash_data_check_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = flash_data_check_invalid &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_carinfo_get_meter_info
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_buffer
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
</UL>

<P><STRONG><a name="[95]"></a>flash_decode_active_version</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, octopus_flash.o(i.flash_decode_active_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = flash_decode_active_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_datetime_version
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_version_code
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[f7]"></a>flash_delay_ms</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_delay_ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_JumpToApplication
</UL>

<P><STRONG><a name="[fd]"></a>flash_erase_user_app_bank</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, octopus_flash.o(i.flash_erase_user_app_bank))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = flash_erase_user_app_bank &rArr; hal_flash_erase_page_ &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase_page_
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[fe]"></a>flash_get_app_max_size</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, octopus_flash.o(i.flash_get_app_max_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flash_get_app_max_size &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_verify_bank_slot_crc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reconfig_bank_address
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_mcu_meta_infor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_bank_address_valid
</UL>

<P><STRONG><a name="[cc]"></a>flash_get_bank_address</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_get_bank_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_get_bank_address
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_send_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>

<P><STRONG><a name="[101]"></a>flash_get_bank_name</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, octopus_flash.o(i.flash_get_bank_name))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank_name
</UL>

<P><STRONG><a name="[13a]"></a>flash_get_bank_slot_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, octopus_flash.o(i.flash_get_bank_slot_mode))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_get_target_bank
</UL>

<P><STRONG><a name="[cb]"></a>flash_get_current_bank</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, octopus_flash.o(i.flash_get_current_bank))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_running
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_meta_infor_valid
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_goto_terget_bank
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank_name
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_enter_upgrade_mode
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_get_target_bank
</UL>

<P><STRONG><a name="[100]"></a>flash_get_current_bank_name</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, octopus_flash.o(i.flash_get_current_bank_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_get_current_bank_name
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_name
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_logo
</UL>

<P><STRONG><a name="[102]"></a>flash_goto_terget_bank</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_goto_terget_bank))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = flash_goto_terget_bank &rArr; flash_verify_bank_slot_crc &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_verify_bank_slot_crc
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_JumpToApplication
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[104]"></a>flash_init_version</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_init_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = flash_init_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_version_code
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[dc]"></a>flash_is_allow_update_address</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, octopus_flash.o(i.flash_is_allow_update_address))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWritBuffTo
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
</UL>

<P><STRONG><a name="[105]"></a>flash_is_bank_address_valid</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, octopus_flash.o(i.flash_is_bank_address_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_is_bank_address_valid &rArr; flash_get_app_max_size &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[106]"></a>flash_is_first_boot</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_is_first_boot))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_is_first_boot
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[107]"></a>flash_is_meta_infor_valid</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, octopus_flash.o(i.flash_is_meta_infor_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_is_meta_infor_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[108]"></a>flash_load_sync_data_infor</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, octopus_flash.o(i.flash_load_sync_data_infor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flash_load_sync_data_infor &rArr; flash_writ_all_infor &rArr; FlashWritBuffTo &rArr; hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc_32
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reconfig_bank_address
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_all_infor
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_first_boot
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[be]"></a>flash_loader_active_user_app</STRONG> (Thumb, 612 bytes, Stack size 56 bytes, octopus_flash.o(i.flash_loader_active_user_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = flash_loader_active_user_app &rArr; flash_init_version &rArr; build_version_code &rArr; parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_versions
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_mcu_meta_infor
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_print_logo
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init_version
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_goto_terget_bank
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank_name
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check_vector_table
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check_enter_upgrade_mode
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>flash_print_logo</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_print_logo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_print_logo &rArr; dbg_log_printf &rArr; vprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank_name
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[10e]"></a>flash_print_mcu_meta_infor</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_print_mcu_meta_infor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = flash_print_mcu_meta_infor &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_loader_active_user_app
</UL>

<P><STRONG><a name="[109]"></a>flash_read_all_infor</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_read_all_infor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_read_all_infor &rArr; flash_data_check_invalid &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_carinfo_get_meter_info
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_data_check_invalid
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadToBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[10a]"></a>flash_reconfig_bank_address</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, octopus_flash.o(i.flash_reconfig_bank_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flash_reconfig_bank_address &rArr; flash_get_app_max_size &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[bc]"></a>flash_vector_table_config</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_vector_table_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_vector_table_config
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_MemoryRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>flash_verify_bank_slot_crc</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, octopus_flash.o(i.flash_verify_bank_slot_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_verify_bank_slot_crc &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc_32
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_app_max_size
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_goto_terget_bank
</UL>

<P><STRONG><a name="[10c]"></a>flash_writ_all_infor</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, octopus_flash.o(i.flash_writ_all_infor))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = flash_writ_all_infor &rArr; FlashWritBuffTo &rArr; hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_carinfo_get_meter_info
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWritBuffTo
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_sync_data_infor
</UL>

<P><STRONG><a name="[30]"></a>fputc</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, octopus_log.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fputc &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uartl_send_buffer
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart9_send_buffer
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart8_send_buffer
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart7_send_buffer
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart6_send_buffer
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart5_send_buffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart4_send_buffer
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart3_send_buffer
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart2_send_buffer
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart0_send_buffer
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0printf)
<LI> printfa.o(i.__0vprintf)
</UL>
<P><STRONG><a name="[c4]"></a>get_message</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, octopus_msgqueue.o(i.get_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_message
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
</UL>

<P><STRONG><a name="[122]"></a>get_month_index</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, octopus_utils.o(i.get_month_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_month_index
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_build_date_time
</UL>

<P><STRONG><a name="[cf]"></a>gpio_get_gpio_status_by_pin</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, octopus_gpio.o(i.gpio_get_gpio_status_by_pin))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
</UL>

<P><STRONG><a name="[d0]"></a>gpio_get_key_status_by_key</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, octopus_gpio.o(i.gpio_get_key_status_by_key))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
</UL>

<P><STRONG><a name="[c8]"></a>gpio_is_power_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_gpio.o(i.gpio_is_power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_is_power_on &rArr; hal_gpio_read
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_onoff
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_is_power_on
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
</UL>

<P><STRONG><a name="[ca]"></a>gpio_power_on_off</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, octopus_gpio.o(i.gpio_power_on_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_power_on_off &rArr; hal_gpio_write
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_onoff
</UL>

<P><STRONG><a name="[d9]"></a>hal_eeprom_write_</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_flash_hal.o(i.hal_eeprom_write_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_eeprom_write_ &rArr; I2C_EepromBufferWrite &rArr; I2C_EepromPageWrite &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EepromBufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ROMWritBuffTo
</UL>

<P><STRONG><a name="[dd]"></a>hal_flash_erase_page_</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, octopus_flash_hal.o(i.hal_flash_erase_page_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_flash_erase_page_ &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_user_app_bank
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
</UL>

<P><STRONG><a name="[11d]"></a>hal_flash_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_flash_hal.o(i.hal_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_flash_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_flash_init
</UL>

<P><STRONG><a name="[df]"></a>hal_flash_read_</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_flash_hal.o(i.hal_flash_read_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_flash_read_
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadToBuff
</UL>

<P><STRONG><a name="[e1]"></a>hal_flash_write_</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, octopus_flash_hal.o(i.hal_flash_write_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWritBuffTo
</UL>

<P><STRONG><a name="[11f]"></a>otms_get_config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, octopus_task_manager.o(i.otms_get_config))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>

<P><STRONG><a name="[d4]"></a>otms_set_state</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, octopus_task_manager.o(i.otms_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_stop_running
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_start_running
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_post_running
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_init_running
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_assert_running
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_stop_running
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_start_running
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_post_running
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_init_running
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_assert_running
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_stop_running
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_start_running
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_post_running
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_init_running
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_assert_running
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_stop_running
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_start_running
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_post_running
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_init_running
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_assert_running
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_stop_running
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_start_running
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_post_running
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_init_running
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_assert_running
</UL>

<P><STRONG><a name="[9b]"></a>otms_task_manager_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_task_manager.o(i.otms_task_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = otms_task_manager_init &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[92]"></a>otms_task_manager_run</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, octopus_task_manager.o(i.otms_task_manager_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = otms_task_manager_run &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateEventLoop
</UL>

<P><STRONG><a name="[9c]"></a>otms_task_manager_start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_task_manager.o(i.otms_task_manager_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = otms_task_manager_start &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[98]"></a>otsm_flash_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, octopus_flash.o(i.otsm_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = otsm_flash_init &rArr; hal_flash_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[97]"></a>otsm_gpio_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, octopus_gpio.o(i.otsm_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = otsm_gpio_init &rArr; hal_gpio_init &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[9a]"></a>otsm_message_queue_init</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, octopus_msgqueue.o(i.otsm_message_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = otsm_message_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_message
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[9d]"></a>otsm_ptl_help</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.otsm_ptl_help))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = otsm_ptl_help &rArr; ptl_print_registered_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_print_registered_module
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskManagerStateMachineInit
</UL>

<P><STRONG><a name="[ed]"></a>parse_build_date_time</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, octopus_utils.o(i.parse_build_date_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = parse_build_date_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_month_index
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_version_code
</UL>

<P><STRONG><a name="[b9]"></a>ptl_build_frame</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, octopus_uart_ptl.o(i.ptl_build_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_checksum
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame_header
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_send_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_receive_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_send_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_receive_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_send_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>

<P><STRONG><a name="[123]"></a>ptl_build_frame_header</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, octopus_uart_ptl.o(i.ptl_build_frame_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
</UL>

<P><STRONG><a name="[124]"></a>ptl_get_checksum</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, octopus_uart_ptl.o(i.ptl_get_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame_header
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_find_valid_frame
</UL>

<P><STRONG><a name="[121]"></a>ptl_print_registered_module</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, octopus_uart_ptl.o(i.ptl_print_registered_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ptl_print_registered_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otsm_ptl_help
</UL>

<P><STRONG><a name="[d6]"></a>ptl_register_module</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, octopus_uart_ptl.o(i.ptl_register_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ptl_register_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_init_running
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_init_running
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_init_running
</UL>

<P><STRONG><a name="[136]"></a>ptl_release_running</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, octopus_uart_ptl.o(i.ptl_release_running))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_post_running
</UL>

<P><STRONG><a name="[d3]"></a>ptl_reqest_running</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, octopus_uart_ptl.o(i.ptl_reqest_running))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_assert_running
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_system_init_running
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_assert_running
</UL>

<P><STRONG><a name="[cd]"></a>ptl_send_buffer</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.ptl_send_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ptl_send_buffer &rArr; ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_send_handler
</UL>

<P><STRONG><a name="[ba]"></a>send_message</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, octopus_msgqueue.o(i.send_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = send_message
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_mcu_initate_remote_soc
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_event_message_handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_received_dispatcher
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_local_dispatcher
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_receive_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_dispatcher
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_dispatcher
</UL>

<P><STRONG><a name="[3c]"></a>task_gpio_assert_running</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_assert_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_gpio_assert_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[12d]"></a>task_gpio_event_dispatcher</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_event_dispatcher))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = task_gpio_event_dispatcher &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_polling
</UL>

<P><STRONG><a name="[12e]"></a>task_gpio_event_polling</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_event_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = task_gpio_event_polling &rArr; task_gpio_polling_status &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_polling_status
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_status
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_key_polling_event_dispatcher
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_dispatcher
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_running
</UL>

<P><STRONG><a name="[3a]"></a>task_gpio_init_running</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_init_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_gpio_init_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[131]"></a>task_gpio_key_polling_event_dispatcher</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, octopus_gpio.o(i.task_gpio_key_polling_event_dispatcher))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = task_gpio_key_polling_event_dispatcher &rArr; send_message
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_polling
</UL>

<P><STRONG><a name="[130]"></a>task_gpio_key_polling_event_status</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, octopus_gpio.o(i.task_gpio_key_polling_event_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_gpio_key_polling_event_status &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTickCounterStart
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_polling
</UL>

<P><STRONG><a name="[12f]"></a>task_gpio_polling_status</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, octopus_gpio.o(i.task_gpio_polling_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_gpio_polling_status &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_read
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTickCounterStart
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_polling
</UL>

<P><STRONG><a name="[3e]"></a>task_gpio_post_running</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_post_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_gpio_post_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[3d]"></a>task_gpio_running</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = task_gpio_running &rArr; task_gpio_event_polling &rArr; task_gpio_polling_status &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_gpio_event_polling
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[3b]"></a>task_gpio_start_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_start_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_gpio_start_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[3f]"></a>task_gpio_stop_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_gpio.o(i.task_gpio_stop_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_gpio_stop_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[133]"></a>task_manager_start_module</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, octopus_task_manager.o(i.task_manager_start_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = task_manager_start_module &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[134]"></a>task_manager_stop_except_2</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, octopus_task_manager.o(i.task_manager_stop_except_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = task_manager_stop_except_2 &rArr; otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_exec_state
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[48]"></a>task_ptl_assert_running</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_assert_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_ptl_assert_running &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[46]"></a>task_ptl_init_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_init_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_ptl_init_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4a]"></a>task_ptl_post_running</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_post_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_ptl_post_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[49]"></a>task_ptl_running</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = task_ptl_running &rArr; ptl_frame_analysis_handler &rArr; ptl_find_valid_frame &rArr; ptl_proc_valid_frame &rArr; ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_rx_event_handler
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_is_exists_task
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_frame_analysis_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[47]"></a>task_ptl_start_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_start_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_ptl_start_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4b]"></a>task_ptl_stop_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.task_ptl_stop_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_ptl_stop_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4e]"></a>task_update_assert_running</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_assert_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_update_assert_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_reqest_running
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4c]"></a>task_update_init_running</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_init_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = task_update_init_running &rArr; ptl_register_module &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_register_module
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[50]"></a>task_update_post_running</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_post_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_update_post_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_release_running
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4f]"></a>task_update_running</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = task_update_running &rArr; update_state_handler_polling &rArr; flash_writ_all_infor &rArr; FlashWritBuffTo &rArr; hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[4d]"></a>task_update_start_running</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_start_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_update_start_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[51]"></a>task_update_stop_running</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.task_update_stop_running))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_update_stop_running &rArr; otms_set_state &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_task_configuration.o(.rodata.task_module_config_table)
</UL>
<P><STRONG><a name="[139]"></a>update_get_target_bank</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.update_get_target_bank))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_get_target_bank &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_slot_mode
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_and_verify_dest_bank
</UL>

<P><STRONG><a name="[13b]"></a>update_print_program_data</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, octopus_update_mcu.o(i.update_print_program_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = update_print_program_data &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_state_handler_polling
</UL>

<P><STRONG><a name="[13d]"></a>upgrade_enter_upgrade_mode</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, octopus_update_mcu.o(i.upgrade_enter_upgrade_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = upgrade_enter_upgrade_mode &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>LoadOptionData_BGPLDO_to_Pmu</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, system_hk32l0xx.o(.text.LoadOptionData_BGPLDO_to_Pmu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LoadOptionData_BGPLDO_to_Pmu
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[8e]"></a>SetSysClock</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, system_hk32l0xx.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SetSysClock &rArr; SetSysClockTo48_HSE8M_PLL
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo48_HSE8M_PLL
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadOptionData_BGPLDO_to_Pmu
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[90]"></a>SetSysClockTo48_HSE8M_PLL</STRONG> (Thumb, 204 bytes, Stack size 28 bytes, system_hk32l0xx.o(.text.SetSysClockTo48_HSE8M_PLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SetSysClockTo48_HSE8M_PLL
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[a8]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, octopus_bsp_hk32l08x.o(.text.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
</UL>

<P><STRONG><a name="[8d]"></a>NVIC_SetPriority</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, octopus_bsp_hk32l08x.o(.text.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Config_IRQ
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Config_IRQ
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Config
</UL>

<P><STRONG><a name="[2d]"></a>key_receive_handler</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, octopus_key.o(.text.key_receive_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = key_receive_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_received_dispatcher
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_key.o(.text.task_key_init_running)
</UL>
<P><STRONG><a name="[2c]"></a>key_send_handler</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, octopus_key.o(.text.key_send_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = key_send_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_key.o(.text.task_key_init_running)
</UL>
<P><STRONG><a name="[ce]"></a>task_key_action_handler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, octopus_key.o(.text.task_key_action_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = task_key_action_handler &rArr; task_key_power_handler &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_key_status_by_key
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_gpio_status_by_pin
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_power_handler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_running
</UL>

<P><STRONG><a name="[d2]"></a>task_key_event_dispatcher</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, octopus_key.o(.text.task_key_event_dispatcher))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = task_key_event_dispatcher &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_local_dispatcher
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
</UL>

<P><STRONG><a name="[d5]"></a>task_key_local_dispatcher</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, octopus_key.o(.text.task_key_local_dispatcher))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_key_local_dispatcher &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_event_dispatcher
</UL>

<P><STRONG><a name="[d1]"></a>task_key_power_handler</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, octopus_key.o(.text.task_key_power_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_key_power_handler &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_reset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_is_power_on
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_key_action_handler
</UL>

<P><STRONG><a name="[bb]"></a>task_key_received_dispatcher</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, octopus_key.o(.text.task_key_received_dispatcher))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_key_received_dispatcher &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_receive_handler
</UL>

<P><STRONG><a name="[2f]"></a>system_receive_handler</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, octopus_system.o(.text.system_receive_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = system_receive_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_power_onoff
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_mcu_initate_remote_soc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_is_power_on
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_address
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_system.o(.text.task_system_init_running)
</UL>
<P><STRONG><a name="[2e]"></a>system_send_handler</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, octopus_system.o(.text.system_send_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = system_send_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_send_buffer
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_address
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_system.o(.text.task_system_init_running)
</UL>
<P><STRONG><a name="[11e]"></a>otms_exec_state</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, octopus_task_manager.o(i.otms_exec_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = otms_exec_state
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_get_config
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_start
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_run
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;otms_task_manager_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_manager_stop_except_2
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_manager_start_module
</UL>

<P><STRONG><a name="[138]"></a>update_and_verify_dest_bank</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, octopus_update_mcu.o(i.update_and_verify_dest_bank))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = update_and_verify_dest_bank &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_get_target_bank
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_receive_handler
</UL>

<P><STRONG><a name="[32]"></a>update_receive_handler</STRONG> (Thumb, 510 bytes, Stack size 88 bytes, octopus_update_mcu.o(i.update_receive_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = update_receive_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_bank_address
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_and_verify_dest_bank
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_delay_ms
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_JumpToApplication
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E2ROM_writ_metas_infor
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_enter_upgrade_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_update_mcu.o(i.task_update_init_running)
</UL>
<P><STRONG><a name="[33]"></a>update_send_handler</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, octopus_update_mcu.o(i.update_send_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = update_send_handler &rArr; ptl_build_frame &rArr; ptl_build_frame_header &rArr; ptl_get_checksum &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_build_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> octopus_update_mcu.o(i.task_update_init_running)
</UL>
<P><STRONG><a name="[137]"></a>update_state_handler_polling</STRONG> (Thumb, 1612 bytes, Stack size 56 bytes, octopus_update_mcu.o(i.update_state_handler_polling))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = update_state_handler_polling &rArr; flash_writ_all_infor &rArr; FlashWritBuffTo &rArr; hal_flash_write_ &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_get_current_bank
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_message
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTickCounter
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_manager_stop_except_2
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_manager_start_module
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTickCounterStart
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc_32
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writ_all_infor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_meta_infor_valid
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_is_bank_address_valid
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_user_app_bank
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_JumpToApplication
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWritBuffTo
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_print_program_data
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_update_running
</UL>

<P><STRONG><a name="[125]"></a>ptl_find_valid_frame</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, octopus_uart_ptl.o(i.ptl_find_valid_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ptl_find_valid_frame &rArr; ptl_proc_valid_frame &rArr; ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_checksum
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_proc_valid_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_frame_analysis_handler
</UL>

<P><STRONG><a name="[127]"></a>ptl_frame_analysis_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.ptl_frame_analysis_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ptl_frame_analysis_handler &rArr; ptl_find_valid_frame &rArr; ptl_proc_valid_frame &rArr; ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_remove_none_header_data
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_find_valid_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_running
</UL>

<P><STRONG><a name="[129]"></a>ptl_get_module</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, octopus_uart_ptl.o(i.ptl_get_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ptl_get_module
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_proc_valid_frame
</UL>

<P><STRONG><a name="[135]"></a>ptl_is_exists_task</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, octopus_uart_ptl.o(i.ptl_is_exists_task))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_running
</UL>

<P><STRONG><a name="[126]"></a>ptl_proc_valid_frame</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, octopus_uart_ptl.o(i.ptl_proc_valid_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ptl_proc_valid_frame &rArr; ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_module
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_find_valid_frame
</UL>

<P><STRONG><a name="[128]"></a>ptl_remove_none_header_data</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, octopus_uart_ptl.o(i.ptl_remove_none_header_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ptl_remove_none_header_data
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_frame_analysis_handler
</UL>

<P><STRONG><a name="[12b]"></a>ptl_rx_event_handler</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, octopus_uart_ptl.o(i.ptl_rx_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ptl_rx_event_handler &rArr; hal_com_uart_get_fifo_data_1 &rArr; cFifo_Pop &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart_get_fifo_data_1
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_running
</UL>

<P><STRONG><a name="[12c]"></a>ptl_tx_event_handler</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, octopus_uart_ptl.o(i.ptl_tx_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ptl_tx_event_handler &rArr; StartTickCounter &rArr; dbg_log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf_level
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTickCounter
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTickCounter
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_hal
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_get_module
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ptl_running
</UL>

<P><STRONG><a name="[12a]"></a>ptl_tx_hal</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, octopus_uart_ptl.o(i.ptl_tx_hal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ptl_tx_hal &rArr; hal_com_uart0_send_buffer &rArr; PTL_1_UART_Send_Buffer &rArr; UART3_Send_Buffer &rArr; UART3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uartl_send_buffer
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart7_send_buffer
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart6_send_buffer
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart5_send_buffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart4_send_buffer
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart3_send_buffer
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart2_send_buffer
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_com_uart0_send_buffer
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_send_buffer
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_tx_event_handler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ptl_proc_valid_frame
</UL>

<P><STRONG><a name="[e7]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e4]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vprintf
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[ea]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e9]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[31]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[2a]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[6c]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[6b]"></a>_scanf_real</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
